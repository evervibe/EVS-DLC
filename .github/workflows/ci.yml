name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      actions: read
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.12.3
        
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Lint Backend
      run: |
        cd tools/apps/dlc-api
        pnpm run lint || echo "No lint script configured"
      continue-on-error: true
      
    - name: Lint Frontend
      run: |
        cd tools/apps/dlc-web-admin
        pnpm run lint
        
    - name: Type check Frontend
      run: |
        cd tools/apps/dlc-web-admin
        pnpm run type-check
        
    - name: Build Backend
      run: |
        cd tools/apps/dlc-api
        pnpm run build
        
    - name: Build Frontend
      run: |
        cd tools/apps/dlc-web-admin
        pnpm run build
        
    - name: Test Backend
      run: |
        cd tools/apps/dlc-api
        pnpm test || echo "No tests configured"
      continue-on-error: true
      
    - name: Upload Backend Build
      uses: actions/upload-artifact@v3
      with:
        name: dlc-api-build
        path: tools/apps/dlc-api/dist
        retention-days: 7
        
    - name: Upload Frontend Build
      uses: actions/upload-artifact@v3
      with:
        name: dlc-web-admin-build
        path: tools/apps/dlc-web-admin/.next
        retention-days: 7

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub (optional)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      continue-on-error: true
      
    - name: Build Docker images
      run: |
        echo "Docker build would happen here in production"
        echo "docker build -t evs-dlc-api:latest tools/apps/dlc-api"
        echo "docker build -t evs-dlc-web:latest tools/apps/dlc-web-admin"
